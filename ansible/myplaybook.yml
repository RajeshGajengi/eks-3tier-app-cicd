
---
- name: Install Java and Jenkins on localhost (master)
  hosts: Master
  become: true

  tasks:
    - name: Execute Java install script
      script: ./scripts/java_script.sh

    - name: Execute Jenkins install script
      script: ./scripts/jenkins_script.sh
    
    - name: Execute the mysql script
      script: ./scripts/mysql_script.sh

    - name: Execute the AWS CLI script
      script: ./scripts/awscli_script.sh

    - name: Execute the docker script
      script: ./scripts/docker_script.sh

    - name: Execute the kubectl script
      script: ./scripts/kubectl_script.sh

    - name: Execute the helm script
      script: ./scripts/helm_script.sh


# to monitor jenkins 
    - name: Download node_exporter 
      get_url: 
        url: https://github.com/prometheus/node_exporter/releases/download/v1.10.2/node_exporter-1.10.2.linux-amd64.tar.gz
        dest: /tmp
        mode: '0644'

    - name: Extract the tar.gz file
      unarchive:
        src: "/tmp/node_exporter-1.10.2.linux-amd64.tar.gz"
        dest: "/opt"
        remote_src: yes   # indicates file already on remote host

    - name: Remove tar.gz file
      file: 
        path: "/tmp/node_exporter-1.10.2.linux-amd64.tar.gz"
        state: absent


    - name: Run node_exporter in the background
      shell: "nohup ./node_exporter > node_exporter.log 2>&1 &"
      args:
        chdir: "/opt/node_exporter-1.10.2.linux-amd64" # change directory before executing





- name: Install docker,sonarqube on sonarqube server
  hosts: sonarqube
  become: true

  tasks:
    - name: Create directory to store scripts on remote server
      file:
        path: /home/ubuntu/scripts
        state: directory
        mode: '0755'

    - name: Copy Docker script to agent server
      copy:
        src: ./scripts/docker_script.sh
        dest: /home/ubuntu/scripts/docker_script.sh
        mode: '0755'

    - name: Execute the docker script
      shell: /home/ubuntu/scripts/docker_script.sh

    - name: Pull SonarQube image
      shell: docker pull sonarqube:10.6-community

    - name: run sonarqube container
      shell: docker run -d --name sonarqube-custom -p 9000:9000 sonarqube:10.6-community




- name: Install prometheus, Blackbox exporter and grafana
  hosts: monitor
  become: true

  tasks:
  - name: Download prometheus 
    get_url: 
      url: https://github.com/prometheus/prometheus/releases/download/v3.7.2/prometheus-3.7.2.linux-amd64.tar.gz
      dest: /tmp
      mode: '0644'

  - name: Extract the tar.gz file
    unarchive:
      src: "/tmp/prometheus-3.7.2.linux-amd64.tar.gz"
      dest: "/opt"
      remote_src: yes   # indicates file already on remote host

  - name: Remove tar.gz file
    file: 
      path: "/tmp/blackbox_exporter-0.27.0.linux-amd64.tar.gz"
      state: absent

  - name: Run Prometheus in the background
    shell: "nohup ./prometheus > prometheus.log 2>&1 &"
    args:
      chdir: "/opt/prometheus-3.7.2.linux-amd64" # change directory before executing




  - name: Download backbox exporter
    get_url: 
      url: https://github.com/prometheus/blackbox_exporter/releases/download/v0.27.0/blackbox_exporter-0.27.0.linux-amd64.tar.gz
      dest: /tmp
      mode: '0644'

  - name: Extract the tar.gz file
    unarchive:
      src: "/tmp/blackbox_exporter-0.27.0.linux-amd64.tar.gz"
      dest: "/opt"
      remote_src: yes   # indicates file already on remote host

  - name: Remove tar.gz file
    file: 
      path: "/tmp/blackbox_exporter-0.27.0.linux-amd64.tar.gz"
      state: absent


  - name: Run blackbox_exporter in the background
    shell: "nohup ./blackbox_exporter > blackbox_exporter.log 2>&1 &"
    args:
      chdir: "/opt/blackbox_exporter-0.27.0.linux-amd64" # change directory before executing





  - name: Install dependencies for grafana
    apt:
      name:
        - adduser
        - libfontconfig1
        - musl
      state: present
      update_cache: yes

  - name: Download Grafana Enterprise .deb package
    get_url:
        url: "https://dl.grafana.com/grafana-enterprise/release/12.2.1/grafana-enterprise_12.2.1_18655849634_linux_amd64.deb"
        dest: "/tmp/grafana-enterprise_12.2.1_amd64.deb"
        mode: '0644'

  - name: Install Grafana Enterprise package
    apt:
      deb: "/tmp/grafana-enterprise_12.2.1_amd64.deb"
      state: present

  - name: Enable and start Grafana service
    systemd:
      name: grafana-server
      enabled: yes
      state: started








# - name: Install prometheus and grafana server
#   hosts: monitoring
#   become: true

#   tasks:
#     - name: Create directory to store scripts on remote server
#       file:
#         path: /home/ubuntu/scripts
#         state: directory
#         mode: '0755'

#     # - name: Copy Java script to agent server
#     #   copy:
    #     src: ./scripts/java_script.sh
    #     dest: /home/ubuntu/scripts/java_script.sh
    #     mode: '0755'

    # - name: Execute the Java script
    #   shell: /home/ubuntu/scripts/java_script.sh


  


